syntax = "proto3";

package place;

option go_package = "placepb/";

service PlaceService {
  rpc GetCategories (GetCategoriesReq) returns (GetCategoriesRes);

  rpc CreatePlace (CreatePlaceReq) returns (CreatePlaceRes);
  rpc GetPlaces (GetPlacesReq) returns (GetPlacesRes);
  rpc GetDetailPlace (GetDetailPlaceReq) returns (GetDetailPlaceRes);
  rpc DeletePlace (DeletePlaceReq) returns (DeletePlaceRes);
  rpc UpdatePlace (UpdatePlaceReq) returns (UpdatePlaceRes);
}

// Category
message Category {
  string id = 1;
  string name = 2;
  string icon = 3;
}

message GetCategoriesReq {
  string search = 1;
}

message GetCategoriesRes {
  repeated Category categories = 1;
}

// Place
message Place {
  string id = 1;
  string owner_id = 2;
  bool friends_only = 3;
  string name = 4;
  string address = 5;
  double lat = 6;
  double lng = 7;
  string category_id = 8;
}

message CreatePlaceReq {
  string name = 1;
  string address = 2;
  double lat = 3;
  double lng = 4;
  string category_id = 5;
  string owner_id = 6;
  bool friends_only = 7;
}

message CreatePlaceRes {
  Place place = 1;
}

message GetPlacesReq {
  double min_lat = 1;
  double min_lng = 2;
  double max_lat = 3;
  double max_lng = 4;
  int32 page_size = 5;
  string next_page_token = 6;
}

message GetPlacesRes {
  repeated Place places = 1;
  string next_page_token = 2;
}

message GetDetailPlaceReq {
  string place_id = 1;
}

message GetDetailPlaceRes {
  Place place = 1;
}

message DeletePlaceReq {
  string place_id = 1;
}

message DeletePlaceRes {
  bool status = 1;
}

message UpdatePlaceReq {
  string place_id = 1;
  string name = 2;
  string address = 3;
}

message UpdatePlaceRes {
  bool status = 1;
}